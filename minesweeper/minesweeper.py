# -*- coding: utf-8 -*-
"""Kalkulator _BMI

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HFHemKE75LFzXG-WPOHD-XTaRB-kjJiw
"""



import streamlit as st
import random

# ---------- Konfigurasi Level ----------
LEVELS = {
    "Mudah": {"size": 5, "mines": 5},
    "Sedang": {"size": 8, "mines": 15},
    "Sulit": {"size": 10, "mines": 25},
}

# ---------- Fungsi Pendukung ----------
def generate_board(size, mines):
    board = [[0 for _ in range(size)] for _ in range(size)]
    mine_positions = set()

    while len(mine_positions) < mines:
        r = random.randint(0, size - 1)
        c = random.randint(0, size - 1)
        if (r, c) not in mine_positions:
            mine_positions.add((r, c))
            board[r][c] = -1  # -1 mewakili bom

    for r in range(size):
        for c in range(size):
            if board[r][c] == -1:
                continue
            count = 0
            for i in range(max(0, r - 1), min(size, r + 2)):
                for j in range(max(0, c - 1), min(size, c + 2)):
                    if board[i][j] == -1:
                        count += 1
            board[r][c] = count
    return board, mine_positions

def reveal_cell(row, col, size, board, revealed):
    if (row < 0 or row >= size or col < 0 or col >= size or revealed[row][col]):
        return
    revealed[row][col] = True
    if board[row][col] == 0:
        for i in range(-1, 2):
            for j in range(-1, 2):
                if i != 0 or j != 0:
                    reveal_cell(row + i, col + j, size, board, revealed)

def reset_game(level):
    size = LEVELS[level]["size"]
    mines = LEVELS[level]["mines"]
    board, mine_positions = generate_board(size, mines)
    st.session_state.board = board
    st.session_state.revealed = [[False] * size for _ in range(size)]
    st.session_state.game_over = False
    st.session_state.victory = False
    st.session_state.level = level
    st.session_state.mines = mines
    st.session_state.mine_positions = mine_positions

def check_victory():
    size = LEVELS[st.session_state.level]["size"]
    for r in range(size):
        for c in range(size):
            if st.session_state.board[r][c] != -1 and not st.session_state.revealed[r][c]:
                return False
    return True

# ---------- UI ----------
st.set_page_config("Minesweeper", layout="centered")
st.title("üß® Minesweeper")

# Pilih level kesulitan
level = st.selectbox("Pilih Level", list(LEVELS.keys()), index=0)

# Inisialisasi permainan
if "board" not in st.session_state or level != st.session_state.get("level", None):
    reset_game(level)

# Tombol Reset
if st.button("üîÑ Reset Game"):
    reset_game(level)

size = LEVELS[level]["size"]

# Tampilkan papan
for row in range(size):
    cols = st.columns(size)
    for col in range(size):
        if st.session_state.revealed[row][col]:
            cell_value = st.session_state.board[row][col]
            if cell_value == -1:
                cols[col].button("üí£", key=f"{row}-{col}", disabled=True)
            elif cell_value == 0:
                cols[col].button("", key=f"{row}-{col}", disabled=True)
            else:
                cols[col].button(str(cell_value), key=f"{row}-{col}", disabled=True)
        else:
            if st.session_state.game_over or st.session_state.victory:
                cols[col].button(" ", key=f"{row}-{col}", disabled=True)
            else:
                if cols[col].button(" ", key=f"{row}-{col}"):
                    if st.session_state.board[row][col] == -1:
                        st.session_state.revealed[row][col] = True
                        st.session_state.game_over = True
                    else:
                        reveal_cell(row, col, size, st.session_state.board, st.session_state.revealed)
                        if check_victory():
                            st.session_state.victory = True

# Tampilkan status
if st.session_state.game_over:
    st.error("üí• Game Over! Kamu menginjak bom.")
elif st.session_state.victory:
    st.success("üéâ Selamat! Kamu menang.")
else:
    st.info("Klik pada kotak untuk bermain.")

# Tampilkan informasi tambahan
st.caption("Dibuat dengan ‚ù§Ô∏è oleh ChatGPT - Python Streamlit Minesweeper")